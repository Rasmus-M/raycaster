

*
* r4: Direction index of ray to cast
*
* On return r8 contains the distance, or -1 if no hit
* r7 contains the map entry
* r0,r1 contains the map coordinates
*
max_steps:
       equ  16
*
cast_ray:
       mov  @x,r0                      ; x
       mov  @y,r1                      ; y
       sla  r4,1
       mov  @unit_vectors_x(r4),r2     ; xdir
       mov  @unit_vectors_y(r4),r3     ; ydir
       li   r8,max_steps               ; Step counter
       li   r5,r6lb                    ; Cache r6lb
cast_ray_1:
       a    r2,r0                      ; x += xdir
       a    r3,r1                      ; y += ydir
       movb r1,r6                      ; y -> r6 msb
       movb r2,*r5                     ; x -> r6 lsb
       movb @map(r6),r7                ; Get map entry
       jne  cast_ray_2                 ; Not zero is a hit
       dec  r8                         ; Distance count down
       jne  cast_ray_1                 ; Loop until we give up
       seto r8                         ; No hit
       rt                              ; Return
cast_ray_2:
       neg  r8                         ; Calculate distance
       ai   r8,max_steps+1             ; max_steps - steps_left + 1
       rt                              ; Return

unit_vectors_x:
       data >0100,>0100,>00ff,>00fd,>00fb,>00f8,>00f5,>00f1
       data >00ed,>00e7,>00e2,>00dc,>00d5,>00ce,>00c6,>00be
       data >00b5,>00ac,>00a2,>0098,>008e,>0084,>0079,>006d
       data >0062,>0056,>004a,>003e,>0032,>0026,>0019,>000d
       data >0000,>fff3,>ffe7,>ffda,>ffce,>ffc2,>ffb6,>ffaa
       data >ff9e,>ff93,>ff87,>ff7c,>ff72,>ff68,>ff5e,>ff54
       data >ff4b,>ff42,>ff3a,>ff32,>ff2b,>ff24,>ff1e,>ff19
       data >ff13,>ff0f,>ff0b,>ff08,>ff05,>ff03,>ff01,>ff00
       data >ff00,>ff00,>ff01,>ff03,>ff05,>ff08,>ff0b,>ff0f
       data >ff13,>ff19,>ff1e,>ff24,>ff2b,>ff32,>ff3a,>ff42
       data >ff4b,>ff54,>ff5e,>ff68,>ff72,>ff7c,>ff87,>ff93
       data >ff9e,>ffaa,>ffb6,>ffc2,>ffce,>ffda,>ffe7,>fff3
       data >0000,>000d,>0019,>0026,>0032,>003e,>004a,>0056
       data >0062,>006d,>0079,>0084,>008e,>0098,>00a2,>00ac
       data >00b5,>00be,>00c6,>00ce,>00d5,>00dc,>00e2,>00e7
       data >00ed,>00f1,>00f5,>00f8,>00fb,>00fd,>00ff,>0100

unit_vectors_y:
       data >0000,>000d,>0019,>0026,>0032,>003e,>004a,>0056
       data >0062,>006d,>0079,>0084,>008e,>0098,>00a2,>00ac
       data >00b5,>00be,>00c6,>00ce,>00d5,>00dc,>00e2,>00e7
       data >00ed,>00f1,>00f5,>00f8,>00fb,>00fd,>00ff,>0100
       data >0100,>0100,>00ff,>00fd,>00fb,>00f8,>00f5,>00f1
       data >00ed,>00e7,>00e2,>00dc,>00d5,>00ce,>00c6,>00be
       data >00b5,>00ac,>00a2,>0098,>008e,>0084,>0079,>006d
       data >0062,>0056,>004a,>003e,>0032,>0026,>0019,>000d
       data >0000,>fff3,>ffe7,>ffda,>ffce,>ffc2,>ffb6,>ffaa
       data >ff9e,>ff93,>ff87,>ff7c,>ff72,>ff68,>ff5e,>ff54
       data >ff4b,>ff42,>ff3a,>ff32,>ff2b,>ff24,>ff1e,>ff19
       data >ff13,>ff0f,>ff0b,>ff08,>ff05,>ff03,>ff01,>ff00
       data >ff00,>ff00,>ff01,>ff03,>ff05,>ff08,>ff0b,>ff0f
       data >ff13,>ff19,>ff1e,>ff24,>ff2b,>ff32,>ff3a,>ff42
       data >ff4b,>ff54,>ff5e,>ff68,>ff72,>ff7c,>ff87,>ff93
       data >ff9e,>ffaa,>ffb6,>ffc2,>ffce,>ffda,>ffe7,>fff3

       aorg >2000
map:
       copy "map.a99"

       end
